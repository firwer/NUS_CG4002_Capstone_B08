from pynq import Overlay, allocate
from pynq import PL 
import numpy as np
import pandas as pd
import time
from sklearn.preprocessing import StandardScaler
from ast import literal_eval

class AI:
    def __init__(self):
        PL.reset()
        scaler_time = time.time()

        print("Setting up")

        self.scaler = StandardScaler()

      #   # Set up scaler using .csv (very long)
      #   file_path = '/home/xilinx/IP/combined_2.csv'
      #   df = pd.read_csv(file_path, converters={'ax': literal_eval, 'ay': literal_eval, 'az': literal_eval,
      #                                           'gx': literal_eval, 'gy': literal_eval, 'gz': literal_eval})

      #   # Combine ax, ay, az, gx, gy, gz columns into a single feature list
      #   X_combined = [ax + ay + az + gx + gy + gz for ax, ay, az, gx, gy, gz in zip(df['ax'], df['ay'], df['az'], 
      #                                                                                df['gx'], df['gy'], df['gz'])]

      #   # Pad sequences to the max length
      #   max_length = max(len(sequence) for sequence in X_combined)
      #   X_padded = np.array([np.pad(sequence, (0, max_length - len(sequence)), 'constant') for sequence in X_combined])
      #   X_padded = X_padded.reshape((X_padded.shape[0], -1))
      #   # Scale features and store scaler
      #   self.scaler.fit(X_padded)

        # Set up scaler by hard coding
        self.scaler.mean_ = np.array([-1302.108371559633, -1580.079128440367, -1648.9254587155963, -1371.5326834862385, -1062.0355504587155, -803.0378440366973, -601.2121559633027, -441.9415137614679, -341.6467889908257, -273.6691513761468, -239.5452981651376, -241.18176605504587, -270.58142201834863, -313.276376146789, -379.94839449541286, -470.8256880733945, -573.6255733944954, -675.2299311926605, -761.0177752293578, -830.7700688073395, -883.3761467889908, -882.2580275229358, -860.9610091743119, -801.1662844036697, -722.9564220183486, -623.2941513761468, -537.2173165137615, -468.8038990825688, -423.81880733944956, -393.42545871559633, -371.26490825688074, -360.1198394495413, -355.5258027522936, -356.38876146788994, -359.91284403669727, -365.63761467889907, -374.7459862385321, -370.76376146788994, -369.3824541284404, -362.6307339449541, -357.9994266055046, -361.23337155963304, -367.0602064220183, -372.1565366972477, -378.8778669724771, -388.25, -394.9604357798165, -402.31938073394497, -402.64105504587155, -402.3107798165138, -400.16685779816515, -396.4661697247706, -394.8446100917431, -392.51146788990826, -387.79587155963304, -385.5309633027523, -381.3176605504587, -376.6794724770642, -371.26662844036696, -368.08715596330273, 285.125, 234.276376146789, 286.97878440366975, 256.1295871559633, 46.24369266055046, 3.43348623853211, 35.87385321100918, 51.4598623853211, 74.94094036697248, 97.47190366972477, 121.22247706422019, 142.72821100917432, 166.21559633027522, 181.545871559633, 180.7012614678899, 184.23509174311926, 188.6072247706422, 207.52809633027522, 227.00860091743118, 236.8658256880734, 236.04759174311926, 228.95814220183487, 214.7803899082569, 180.2855504587156, 155.22477064220183, 139.579128440367, 127.22477064220183, 111.31422018348624, 112.65768348623853, 109.08830275229357, 124.03899082568807, 141.98738532110093, 155.06766055045873, 171.01548165137615, 183.9380733944954, 201.8612385321101, 222.12155963302752, 236.25, 250.15825688073394, 256.30561926605503, 267.875, 265.404243119266, 267.20412844036696, 270.48394495412845, 266.17029816513764, 264.1897935779817, 264.1204128440367, 263.45183486238534, 264.5894495412844, 264.2190366972477, 259.73107798165137, 251.84977064220183, 240.28325688073394, 233.85493119266056, 223.58543577981652, 214.3084862385321, 205.5980504587156, 198.12270642201835, 187.03784403669724, 179.233371559633, 220.5315366972477, -138.7769495412844, -119.64564220183486, -113.2184633027523, -87.83658256880734, -31.829701834862384, -36.716743119266056, -69.38130733944953, -96.56192660550458, -129.07282110091742, -154.5946100917431, -175.30619266055047, -194.0756880733945, -204.76949541284404, -215.20642201834863, -220.09116972477065, -240.95011467889907, -269.4071100917431, -292.0366972477064, -297.2133027522936, -274.33256880733944, -250.16857798165137, -223.8216743119266, -177.23451834862385, -112.07282110091744, -42.84518348623853, 9.263188073394495, 37.6875, 68.5447247706422, 90.17087155963303, 97.97821100917432, 96.2631880733945, 81.26204128440367, 66.86410550458716, 47.512614678899084, 28.21158256880734, 16.914564220183486, 9.880160550458715, 8.2901376146789, 2.210435779816514, 0.4369266055045872, 1.6553899082568808, 3.805045871559633, 3.522935779816514, 5.021788990825688, 6.2110091743119265, 4.028096330275229, 5.07052752293578, 2.532110091743119, 2.243119266055046, 3.9644495412844036, 1.4392201834862386, -1.2190366972477065, -1.518348623853211, -2.6003440366972477, -0.3967889908256881, 2.194380733944954, 4.391628440366972, 5.103211009174312, 4.643348623853211, -1047.820527522936, 40.08772935779817, -1278.5412844036698, -1619.3795871559632, -1247.758027522936, -1168.148509174312, -776.2413990825688, -194.02408256880733, 203.41857798165137, 435.39449541284404, 640.733371559633, 689.3967889908257, 771.3595183486239, 443.7224770642202, 358.1158256880734, 386.8784403669725, 247.72706422018348, 153.87614678899084, 12.714449541284404, -106.67660550458716, -234.2643348623853, -534.2717889908257, -669.9592889908257, -941.2362385321101, -1044.1336009174313, -1097.3331422018348, -943.615252293578, -743.4094036697247, -698.9644495412844, -519.7941513761468, -142.95814220183487, 77.05963302752293, 246.45699541284404, 416.20470183486236, 686.2844036697247, 944.0774082568807, 1181.8199541284403, 1321.3383027522937, 1477.6336009174313, 1650.6863532110092, 1656.0997706422017, 1630.9002293577983, 1731.4311926605506, 1761.7270642201836, 1660.6508027522937, 1664.2563073394494, 1641.9873853211009, 1588.3010321100917, 1627.6496559633028, 1472.2534403669724, 1303.8532110091744, 1176.6261467889908, 1048.0344036697247, 762.930619266055, 612.8457568807339, 489.32511467889907, 329.6307339449541, 191.7631880733945, 106.58600917431193, 42.64105504587156, -1454.6450688073394, -661.8377293577981, -900.7844036697247, -2727.273509174312, -4155.940940366972, -4994.042431192661, -5820.323967889908, -6309.662270642202, -6378.600344036698, -5839.686353211009, -4950.565366972477, -4039.2436926605506, -3153.494266055046, -2324.3130733944954, -1432.3996559633028, -513.1725917431193, 432.23795871559633, 1482.5665137614678, 2611.7299311926604, 4085.973623853211, 5352.547018348624, 6086.330848623853, 6328.015481651376, 6210.878440366972, 5739.034403669725, 4998.781536697248, 4198.177752293578, 3215.826834862385, 2542.2855504587155, 1874.5751146788991, 1128.6731651376147, 460.0183486238532, -176.71559633027522, -604.2574541284404, -829.694380733945, -880.1014908256881, -784.4174311926605, -641.4071100917431, -473.29816513761466, -380.036123853211, -234.3302752293578, -101.6387614678899, 38.50057339449541, 205.65825688073394, 340.07454128440367, 454.65022935779814, 520.5797018348624, 570.7534403669724, 572.7425458715596, 596.5716743119266, 577.6920871559633, 499.04701834862385, 488.5900229357798, 440.0447247706422, 417.3732798165138, 420.8704128440367, 449.5544724770642, 408.9019495412844, 328.6508027522936, 335.4868119266055, 3539.1462155963304, 4643.481077981652, 3210.180619266055, 4226.051605504587, 5071.502866972477, 4045.338876146789, 3067.9615825688074, 2393.685779816514, 1813.8371559633028, 1421.036123853211, 1003.6479357798165, 667.5212155963303, 369.73910550458714, 100.52981651376147, -209.75688073394497, -430.30160550458714, -677.566513761468, -815.379013761468, -964.6427752293578, -985.608371559633, -936.3038990825688, -882.8646788990826, -747.8394495412844, -714.776376146789, -778.0315366972477, -809.8021788990826, -739.6307339449542, -737.4483944954128, -1107.1588302752293, -1456.0280963302753, -1737.8136467889908, -2083.441513761468, -2378.190366972477, -2639.3469036697247, -2927.0630733944954, -3153.140481651376, -3347.422018348624, -3458.991399082569, -3489.8600917431195, -3522.9741972477063, -3517.998853211009, -3487.8526376146788, -3400.808486238532, -3363.350344036697, -3265.7155963302753, -3214.325114678899, -3146.922018348624, -2985.956422018349, -2702.1186926605506, -2359.516055045872, -1954.141628440367, -1579.377866972477, -1270.1181192660551, -939.7247706422019, -683.7276376146789, -438.05045871559633, -238.33142201834863, -29.057339449541285, 175.9518348623853, 244.39449541284404])
        self.scaler.scale_ = np.array([802.0452920666306, 1206.822330373164, 1289.7107203361613, 1291.8989934406197, 1234.1900377149707, 958.897610283911, 715.3959149181592, 612.8908030698592, 570.6095618117292, 548.6551490094677, 529.3326866268159, 522.4547714172945, 532.4022880793307, 553.952424216308, 623.2149561035774, 733.5249885556295, 862.8867928406626, 970.3770556049282, 1036.6435130714974, 1082.399226933625, 1080.8490772442055, 1035.6066823961849, 987.381947812009, 920.569814370053, 846.3688185419188, 737.145410052945, 629.0614407487043, 555.0433608430876, 515.864301430444, 489.10799396932526, 480.27694228591196, 486.22585430578175, 498.4545512894736, 516.1732118623918, 527.1152118202227, 546.3688017539895, 568.4561986748595, 553.6703246207692, 525.8718382946636, 489.07243475864135, 461.4565311708371, 435.77649641382203, 427.37022862566613, 414.82856403283847, 400.7767622752766, 395.61500360575513, 380.29032568056783, 366.3655233977114, 347.73957923402867, 335.7290690031234, 318.2973323302708, 299.54500282578215, 296.2181648684179, 287.392624315046, 277.798212904705, 277.295896019993, 266.27297680077, 250.75689758950293, 242.31868400988827, 238.53525544856365, 928.3076624997415, 862.4887729580084, 720.8815004825497, 573.1021895570274, 573.3904164072226, 469.6439776675577, 372.66852619622034, 344.1119630494451, 332.4724473967954, 331.1533662261183, 337.4988121614326, 343.0898048676744, 355.3118598335918, 370.585405298928, 370.71578989725054, 379.43784892886254, 398.57263098784586, 463.42053854018104, 478.08154753739365, 491.34446858977424, 523.442158468869, 514.3951188248777, 491.51903708065305, 467.2922806670648, 463.52148162485366, 446.0750653445855, 414.63306280582145, 392.8110245860198, 366.16766745082384, 332.2673001009662, 325.7436299769212, 316.754061003124, 308.7036244709469, 302.2338416830313, 309.9480362188494, 303.8909132686814, 307.05582359114624, 311.66516469653953, 298.5062413108788, 298.5618146552884, 293.25974094546916, 278.48139340505594, 267.5997256128895, 262.0290374850751, 246.4425170957313, 236.66381308377487, 224.7916679661094, 227.49076243233736, 214.27533631072217, 203.02505032537854, 221.63230572823983, 202.09768711581557, 191.38837572295193, 189.04074954133904, 184.74832755830278, 181.3933204861044, 177.24819850239962, 173.9370630878052, 169.9133877822621, 165.08789016182303, 1268.1847177612729, 973.6403747083697, 907.7879269422517, 772.0834755479186, 692.8889802888706, 660.0667625139143, 597.4807538218776, 521.122856708101, 489.21961900013434, 479.0148276753726, 473.4244914201771, 455.634210238468, 431.1527592862219, 417.1320628731497, 447.8250585641937, 511.8331522554146, 597.6374274127104, 653.2288816915955, 662.1576255925598, 655.1642270181736, 646.4034625652441, 634.1850846412777, 610.8551277692338, 607.5510432184478, 598.9243443628602, 589.6232179156806, 553.5074629855158, 487.46253248603114, 437.9756487194855, 405.7872099927939, 371.7745901154557, 346.38339198237014, 315.958372852579, 316.2038601735426, 317.1523467978791, 321.32725298771817, 324.45984070182004, 304.212818917205, 290.17535942023073, 272.6923693624845, 256.5103578460279, 237.9747763999373, 228.55804940324543, 220.11945917799363, 212.1449559226073, 211.05276519229017, 204.74021302583014, 222.14789726624358, 211.17799815492583, 212.1014758942257, 219.42777149053495, 214.58818512612055, 202.31033468001115, 188.6551624142042, 181.09157175933655, 175.651215308152, 171.06160551470305, 162.12798192064227, 151.3859015309879, 142.3849087836811, 10010.608508952375, 9724.548183579418, 8748.198957795605, 7640.583189918181, 6631.522894750901, 6455.076273388379, 5076.565631946956, 4526.451987820468, 4353.257334322098, 4442.418549135549, 5078.853019727623, 5577.920407867387, 5905.944079188643, 5697.671523320722, 5403.908471850243, 5349.538911056848, 5500.515710813831, 5824.131275597617, 6014.335691264857, 5931.891191771165, 5934.378495411407, 6084.409105063713, 6581.539181859854, 6787.652343174769, 6571.946727486217, 6251.682287420452, 5786.006814274957, 5435.167987098923, 4845.965010255116, 4449.08923851123, 4227.212233649585, 4143.560913587378, 4181.130573284819, 4170.338841886547, 4239.236293826328, 4555.139354291207, 4944.742079007213, 4952.971484765474, 5357.907131806993, 5462.352457617123, 5135.668725530726, 4968.50289568694, 4770.049688986815, 4694.091970408424, 4512.6149261292585, 4499.904719584478, 4449.515982575932, 4414.732630386252, 4397.713838476305, 4092.9473329620287, 4165.537740241898, 3888.2612441084266, 3884.036229382501, 3545.7044911624566, 3514.364647701177, 3229.9852201159424, 2868.087977338329, 2639.175481474553, 2415.9789102280356, 2223.862789129338, 17140.535095422016, 17790.218951598057, 18054.721754531813, 16299.772492160122, 14531.646730776803, 12252.427852951365, 10086.357823596083, 8915.518230719514, 8386.948063726559, 8151.78582334987, 8196.490311105059, 8655.205180757064, 9386.943529602646, 10267.76294295273, 11074.694163887636, 11504.315059887816, 11670.470190922293, 11898.39723084616, 12299.09871394416, 12656.088978470285, 12849.752541974914, 12784.52517982006, 12551.978963562295, 12261.729597750162, 11810.571423505904, 11324.703692727513, 10792.081572361518, 10283.662518172929, 9942.659198637451, 9334.417013982043, 8882.098356614479, 8409.610747538914, 8197.709566519452, 8180.820768185273, 8038.716189825636, 7833.207178498604, 7624.340609333203, 7203.036807125993, 6776.072069066276, 6257.558176372833, 5950.585068652232, 5609.222630302325, 5484.925492393653, 5180.580534837426, 5169.168164713333, 4998.576176208359, 4945.905875744205, 4932.579194878645, 4588.471536964058, 4318.364208796767, 4023.3822455251643, 3762.4869727703144, 3668.909680571254, 3446.6100946856013, 3137.0379617024355, 3033.0384261406407, 2863.005062492633, 2445.623173223759, 2302.949224565808, 2148.3644050296866, 11894.513266756558, 12997.76881323673, 13434.920898729053, 12104.877900872976, 11187.70599246533, 10156.834685999276, 8644.337035245331, 7600.9754059231855, 7327.097303145784, 7316.607027660041, 7423.150897614658, 7573.835847551149, 7939.170212497777, 8408.825806227527, 8974.930470167074, 9383.84629062372, 9899.608460086058, 10428.832373555997, 10787.38289087913, 10936.99354548331, 11130.518239625917, 11304.090997199768, 11207.673690220965, 10794.187297330658, 10286.775694938306, 9617.906144340797, 8887.46391837063, 8345.58980246493, 7923.117160462776, 7690.6764270607, 7488.074845466262, 7423.127095592081, 7392.492137405664, 7525.343735753232, 7721.074420582781, 7803.193813477958, 7944.102932068226, 7816.175000699154, 7577.753067392721, 7324.944758137766, 7107.716634053353, 6978.7654160530465, 6950.367589366287, 6869.438732069613, 6808.090161094488, 6688.8273193912855, 6529.252592268399, 6331.157259963973, 6061.310307955652, 5731.6408015865745, 5397.963246435878, 5019.980022872369, 4772.467430340672, 4464.166055623897, 4099.370944108535, 3728.01711055386, 3443.5074407524153, 2979.6126580305154, 2673.000158306014, 2360.535689934793])

        print(f"Scaler time: {((time.time() - scaler_time) * 1000):.4f} ms\n")

        # Load the overlay
        overlay = Overlay("/home/xilinx/IP/design_3.bit")

        # DMA objects
        self.dma = overlay.axi_dma_0
        self.dma_send = self.dma.sendchannel
        self.dma_recv = self.dma.recvchannel

        # HLS object
        self.hls = overlay.predict_0
        CONTROL_REGISTER = 0x0
        self.hls.write(CONTROL_REGISTER, 0x81)  # Starts the HLS IP

    def predict(self, input):
      input_buffer = allocate(shape=(360,), dtype=np.float32)
      output_buffer = allocate(shape=(7,), dtype=np.float32)
      padded_input = np.pad(input, (0, 360 - len(input)), 'constant')
      
      # Use the stored scaler to transform the input
      scaled_input = self.scaler.transform([padded_input])
      for i in range(360):
         input_buffer[i] = scaled_input[0][i]
       
      start_time = time.time()
      self.dma_send.transfer(input_buffer)
      self.dma_recv.transfer(output_buffer)
      self.dma_send.wait()
      self.dma_recv.wait()
   
      # Output the result from DMA
      print(f"Float values:{output_buffer}")
      max_idx = 0
      max_val = output_buffer[0]
      for i in range(1, 7):
         if output_buffer[i] > max_val:
            max_val = output_buffer[i]  
            max_idx = i

       #print("Input Buffer (Sent Data):", input_buffer)
      #print(f"Predicted Gesture: {max_idx}")
      print(f"Inference time: {((time.time() - start_time) * 1000):.4f} ms\n")

      # Clean up
      input_buffer.close()
      output_buffer.close()
      return max_idx

